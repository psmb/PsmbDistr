root.sermonsFacetsJson {
  condition = ${request.arguments.facets}
  renderer = Neos.Fusion:Http.Message {
    httpResponseHead {
      headers.Content-Type = 'application/json;charset=utf-8'
      headers.Access-Control-Allow-Origin = '*'
    }
    content = Sfi.Site:SermonsFacetsJson
  }
}
root.@cache.entryIdentifier.facets = ${request.arguments.facets}

prototype(Sfi.Site:SermonsFacetsJson) < prototype(Neos.Fusion:RawArray) {
  authorConfig = T:RawArray {
		terms = T:RawArray {
			field = 'author'
			size = 100
		}
	}
  themeConfig = T:RawArray {
		terms = T:RawArray {
			field = 'themes'
			size = 100
		}
	}
  value = ${Search.query(node).nodeType("Sfi.Site:Sermon").aggregation('author', this.authorConfig).aggregation('theme', this.themeConfig)}
	value.@process.execute = ${value.execute().aggregations}

  @process.1 = ${Json.stringify(value)}

  @cache {
    mode = 'cached'
    entryIdentifier {
    }
    entryTags {
      1 = ${Neos.Caching.nodeTypeTag('Sfi.Site:Sermon')}
    }
  }
}