prototype(Sfi.Site:Sermon.Document) < prototype(Sfi.Site:AbstractPage.Document) {
	body = Sfi.Site:Sermon
}
prototype(Sfi.Site:Sermon) < prototype(Sfi.Site:AbstractPage) {
	templatePath = 'resource://Sfi.Site/Private/Fusion/NodeTypes/Sermon.html'
	main = Neos.Neos:ContentCollection {
		nodePath = 'main'
	}

	// sermonsByAuthor = Sfi.Site:SermonList {
	// 	@process.tmpl = ${'<h2 class="beta marginBottom-double">Другие записи автора:</h2>' + value}
	// 	@context.limit = 12
	// 	query.@process.filterByAuthor = ${value.exactMatch('author', documentNode.properties.author || documentNode)}
	// 	query.@process.filterOutSelf = ${value.queryFilter('bool', {must_not: [
	// 		{term: {__identifier: documentNode.identifier}}
	// 	]})}
	// 	itemRenderer = T:Tag {
	// 		@process.tmpl = ${'<p class="paragraph">' + value + '</p>'}
	// 		tagName = 'a'
	// 		attributes.@ignoreProperties = ${['nodeUri']}
	// 		attributes.nodeUri = NodeUri {
	// 			node = ${node}
	// 		}
	// 		attributes.class = 'link'
	// 		attributes.href = ${node.properties.isExternal ? node.properties.url : this.nodeUri}
	// 		content = ${node.properties.title}
	// 	}
	// 	@cache {
	// 		mode = 'cached'
	// 		entryIdentifier {
	// 			node = ${documentNode}
	// 		}
	// 		entryTags {
	// 			1 = ${Neos.Caching.nodeTypeTag('Sfi.Site:Sermon')}
	// 		}
	// 	}
	// }

	// sermons = Sfi.Site:SermonListWithLinks {
	// 	@context.limit = 12
	// 	@process.tmpl = ${'<div class="marginBottom-double">' + value + '</div>'}
	// 	list.@process.tmpl = ${'<ul class="small-block-grid-1 medium-block-grid-3 large-block-grid-4">' + value + '</ul>'}
	// 	list.itemRenderer.@process.blockgrid = ${'<li>' + value + '</li>'}
	// }
	disqus = Sfi.Site:Disqus
	share = Sfi.Site:Share

	authorName = ${node.properties.author.properties.title}
	thumbUri = Neos.Neos:ImageUri {
		asset = ${node.properties.author.properties.photo}
		# No idea why this is needed
		maximumWidth>
		width = 96
		height = 96
		allowCropping = TRUE
		allowUpscaling = TRUE
	}

	@process.contentElementWrapping = Neos.Neos:ContentElementWrapping

	@cache {
		mode = 'cached'
		entryIdentifier {
			node = ${node}
		}
		entryTags {
			1 = ${Neos.Caching.nodeTag(node)}
			2 = ${Neos.Caching.nodeTypeTag('Sfi.Site:Tag')}
		}
	}
}
