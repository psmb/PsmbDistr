prototype(Sfi.Site:Story) {
	templatePath = 'resource://Sfi.Site/Private/Fusion/NodeTypes/Story-anp.html'
	@context.node = ${node.properties.collection ? node.properties.collection : node}

	imageUri = ImageUri {
		asset = ${node.properties.image}
	}

	title = ${node.properties.title}
	description = ${node.properties.description}

	feed = T:Collection {
		collection = ${Search.query(site).nodeType('Sfi.Site:TaggableMixin').exactMatch('collections', node.identifier).sortDesc('date').limit(5).execute()}
		iterationName = 'iterator'
		itemRenderer = T:Case {
			isImportant {
				condition = ${node.properties.type == 'announcement'}
				renderer = Sfi.Site:StoryItemFirst
			}
			default {
				condition = ${true}
				renderer = Sfi.Site:StoryItem
			}
		}
		@cache {
			mode = 'cached'
			entryIdentifier {
				node = ${node}
			}
			entryTags {
				1 = ${'Node_' + node.identifier}
				2 = 'NodeType_Sfi.Site:TaggableMixin'
			}
		}
	}
	allLink = NodeUri {
		node = ${node}
	}
}

prototype(Sfi.Site:StoryItemFirst) < prototype(T:Tag) {
	@process.tmpl = ${'<li class="StoryFeed-item StoryItemFirst">' + value + '</li>'}
	tagName = 'a'
	attributes {
		@ignoreProperties = ${['imageUri']}
		imageUri = ImageUri {
			asset = Sfi.Site:NewsThumb
			maximumWidth = 640
			maximumHeight = 420
			allowCropping = ${true}
		}
		class = 'StoryItemFirst-bg'
		style = ${'display: block; background-image: url(' + this.imageUri + ')'}
		href = NodeUri {
			node = ${node}
		}
	}
	title = ${node.properties.title}
	hasTime = ${Date.format(node.properties.date, 'H:i') != '00:00'}
	date = ${Date.format(node.properties.date, 'd.m') + (this.hasTime && (' / ' + Date.format(node.properties.date, 'H:i')))}
	content = ${'
		<div class="StoryItemFirst-overlay">
			<div class="margin-single">
				<div class="beta marginBottom-none color-white"><strong>' + this.date + '</strong></div>
				<div class="gamma marginTop-none color-white"><strong>' + node.properties.announcementPlace + '</strong></div>
			</div>
			<div class="StoryItemFirst-inner">
				<div class="epsilon color-white"><strong>' + this.title + '</strong></div>
			</div>
		</div>
	'}
}
prototype(Sfi.Site:StoryItem) < prototype(T:Tag) {
	@process.tmpl = ${'<li class="StoryFeed-item">' + value + '<div class="StoryFeed-line"></div></li>'}
	tagName = 'a'
	attributes.class = 'epsilon'
	attributes.href = NodeUri {
		node = ${node}
	}
	content = ${node.properties.title}
	content.@process.isBlog = ${q(node).is('[instanceof Sfi.Site:Blog]') ? 'Пишут в блогах: ' + node.properties.author.properties.name + '. ' + value : value}
}
