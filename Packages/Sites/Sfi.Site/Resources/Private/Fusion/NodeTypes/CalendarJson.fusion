# Rendering object for all json endponts
root.calendarJson {
  condition = ${request.arguments.calendarDate}
  renderer = Neos.Fusion:Http.Message {
    httpResponseHead {
      headers.Content-Type = 'application/json;charset=utf-8'
      headers.Access-Control-Allow-Origin = '*'
    }
    content = Sfi.Site:CalendarJson
  }
}
root.@cache.entryIdentifier.calendarDate = ${request.arguments.calendarDate}
root.@cache.entryIdentifier.verses = ${request.arguments.verses}

prototype(Sfi.Site:CalendarJson) < prototype(Neos.Fusion:RawArray) {
  sermons = Sfi.Site:SermonsJson
  thisDays = Sfi.Site:ThisDaysJson

  @process.1 = ${Json.stringify(value)}

  @cache {
    mode = 'cached'
    entryIdentifier {
      calendarDate = ${request.arguments.calendarDate}
      verses = ${request.arguments.verses}
    }
    entryTags {
      1 = ${Neos.Caching.nodeTypeTag('Sfi.Site:Sermon')}
      2 = ${Neos.Caching.nodeTypeTag('Sfi.Site:ThisDay')}
    }
  }
}

prototype(Sfi.Site:SermonsJson) < prototype(Neos.Fusion:RawCollection) {
  # collection = ${q(Search.query(site).nodeType("Sfi.Site:Sermon").execute().toArray()).filterByMagicDate(request.arguments.calendarDate).get()}
  collection = ${q(site).find('[instanceof Sfi.Site:Sermon]').filterByMagicDate(request.arguments.calendarDate, request.arguments.verses).get()}
  itemName = 'node'
  itemRenderer = Sfi.Site:SermonJson
}

prototype(Sfi.Site:SermonJson) < prototype(Neos.Fusion:RawArray) {
  id = ${node.properties.uriPathSegment}
  title = ${String.stripTags(node.properties.title)}
  teaser = ${q(node).property('teaser')}
  authorName = ${node.properties.author.properties.title}
  authorId = ${node.properties.author.identifier}
  bodytext = Neos.Fusion:Collection {
    collection = ${q(node).children('main').children()}
    itemRenderer = Neos.Neos:ContentCase
    itemName = 'node'
  }
}

prototype(Sfi.Site:ThisDaysJson) < prototype(Neos.Fusion:RawCollection) {
  # collection = ${q(Search.query(site).nodeType("Sfi.Site:ThisDay").execute().toArray()).filterByMagicDate(request.arguments.calendarDate).get()}
  collection = ${q(site).find('[instanceof Sfi.Site:ThisDay]').filterByMagicDate(request.arguments.calendarDate, request.arguments.verses).get()}
  itemName = 'node'
  itemRenderer = Sfi.Site:ThisDayJson
}

prototype(Sfi.Site:ThisDayJson) < prototype(Neos.Fusion:RawArray) {
  id = ${node.properties.uriPathSegment}
  title = ${String.stripTags(node.properties.title)}
  link = ${node.properties.link}
	link.@process.convertUris = Neos.Neos:ConvertUris {
    absolute = TRUE
  }
  image = Neos.Neos:ImageUri {
    asset = ${node.properties.image}
    width = 640
    heght = 363
    maximumWidth = 640
    maximumHeight = 363
    allowCropping = TRUE
    allowUpscaling = TRUE
  }
  bodytext = Neos.Fusion:Collection {
    collection = ${q(node).children('main').children()}
    itemRenderer = Neos.Neos:ContentCase
    itemName = 'node'
    prototype(Neos.Neos:ConvertUris) {
      absolute = TRUE
    }
    prototype(Psmb.Term:ReplaceTerms) {
      absolute = TRUE
    }
  }
}
