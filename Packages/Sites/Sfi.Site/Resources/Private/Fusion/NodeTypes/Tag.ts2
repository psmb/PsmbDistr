prototype(Sfi.Site:Tag.Document) < prototype(Sfi.Site:AbstractPage.Document) {
	body = Sfi.Site:Tag
}
prototype(Sfi.Site:Tag) < prototype(Sfi.Site:AbstractPage) {
	templatePath = 'resource://Sfi.Site/Private/Fusion/NodeTypes/Tag.html'
	title = ${q(node).parent().get(0) == q(site).children('tags').get(0) ? q(site).children('tags').get(0).properties.title : q(node).property('title')}
	cover = Neos.Neos:ContentCollection {
		nodePath = 'cover'
		prototype(Psmb.NodeTypes:Image) {
			content.image.maximumHeight = 600
		}
	}
	main = Neos.Neos:ContentCollection {
		nodePath = 'main'
	}
	blogList = Sfi.Site:BlogListWithLinks {
		prototype(Sfi.Site:BlogList) {
			query.@process.byThisSection = ${value.exactMatch('collections', documentNode.identifier)}
		}
	}
	# TODO: meh...
	showBlogList = ${String.length(this.blogList) > 500}
	stream = Sfi.Site:Stream {
		@process.tmpl = ${'<div class="row backgroundColor-gray"><div class="fixedWidth"><div class="columns">' + value + '</div></div></div>'}
		@if.notRoot = ${q(node).parent().get(0) != q(site).children('tags').get(0)}
	}
	tagsMenu = T:Array {
		# TODO: refactor
		@if.isDescendantOfTags = ${q(node).parents().get(1) == q(site).children('tags').get(0) || q(node).parent().get(0) == q(site).children('tags').get(0)}
		tagsHeader = T:Collection {
			@process.tmpl = ${'<div class="stripe"><div class="fixedWidth"><dl class="tabs" data-tab>' + value + '</dl></div></div>'}
			collection = ${q(site).children('tags').children('[instanceof Neos.Neos:Document]').get()}
			iterationName = 'iterator'
			itemRenderer = T:Tag {
				tagName = 'dd'
				attributes.class = ${q(documentNode).parent().get(0) == q(site).children('tags').get(0) ? (node == documentNode && 'active') : (iterator.isFirst && 'active')}
				content = T:Tag {
					tagName = 'a'
					attributes.href = ${'#' + node.name}
					content = ${node.properties.title}
				}
			}
		}
		tagsContent = T:Collection {
			@process.tmpl = ${'<div class="row"><div class="fixedWidth"><div class="tabs-content columns">' + value + '</div></div></div>'}
			collection = ${q(site).children('tags').children().get()}
			iterationName = 'iterator'
			itemName = 'node'
			itemRenderer = T:Collection {
				@process.tmpl = ${'<div class="content ' + (q(documentNode).parent().get(0) == q(site).children('tags').get(0) ? (node == documentNode && 'active') : (iterator.isFirst && 'active')) +'" id="' + node.name + '">' + value + '</div>'}
				collection = ${q(node).children('[instanceof Sfi.Site:Tag]').groupBy('String.substring(node.properties.navTitle, 0, 1)')}
				itemKey = 'firstLetter'
				itemName = 'nodes'
				itemRenderer = T:Collection {
					@process.tmpl = ${'<h2 class="block-title--primary">' + firstLetter + '</h2><ul>' + value + '</ul>'}
					collection = ${q(nodes).sort('navTitle', 'ASC').get()}
					itemRenderer = T:Tag {
						@process.tmpl = ${'<li class="epsilon">' + value + '</li>'}
						tagName = 'a'
						attributes.href = NodeUri {
							node = ${node}
						}
						content = ${node.properties.navTitle || node.properties.title}
					}

				}
			}
		}
		@cache {
			mode = 'cached'
			entryIdentifier {
				node = ${node}
			}
			entryTags {
				1 = 'NodeType_Sfi.Site:Tag'
			}
		}
	}
}
