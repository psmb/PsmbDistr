# Meh..
root {
	@context.itemsPerPage = 12
	@context.currentPage = ${request.arguments.currentPage ? String.toInteger(request.arguments.currentPage) : 1}
}

prototype(Sfi.Site:Stream) < prototype(T:Template) {
	templatePath = 'resource://Sfi.Site/Private/Fusion/Objects/Stream.html'
	attributes = T:Attributes {
		class = "stream js-stream"
		id = "more_news"
	}
	i18n = T:RawArray {
		loadMore = ${Translation.translate('loadMore', null, [], null, 'Sfi.Site')}
		end = ${Translation.translate('end', null, [], null, 'Sfi.Site')}
		@process.json = ${Json.stringify(value)}
		@process.wrapWithScriptTag = ${'<script>window.Psmb = window.Psmb || {}; window.Psmb.i18n = window.Psmb.i18n || {}; window.Psmb.i18n = Object.assign(window.Psmb.i18n, ' + value + ');</script>'}
	}

	@context.hideBar = ${false}
	@context.ajaxOnly = ${false}
	@context.query = Sfi.Site:StreamQuery

	filterBar = Sfi.Site:StreamFilterBar {
		@if.barNotHidden = ${hideBar ? false : true}
	}
	content = Sfi.Site:StreamContent {
		autoloadLink = T:Tag {
			attributes.class = 'js-stream__autoload'
			attributes.style = 'display: none'
			attributes.data-url = NodeUri {
				node = ${node}
			}
		}
		@process.ajaxOnly = ${ajaxOnly ? this.autoloadLink : value}

	}
	nextLink = Sfi.Site:StreamNextLink
}

root.stream {
	@position = 'before thePage'
	condition = ${request.arguments.ajax == 'true'}
	renderer = Sfi.Site:StreamContent {
		@context.query = Sfi.Site:StreamQuery
		value = T:RawArray {
			nextLink = Sfi.Site:StreamNextLink
			@process.json = ${Json.stringify(value)}
		}
	}
}

prototype(Neos.Fusion:GlobalCacheIdentifiers) {
	pagination = ${request.arguments.currentPage}
	ajax = ${request.arguments.ajax}
	collection = ${request.arguments.collection}
	place = ${request.arguments.place}
	media = ${request.arguments.media}
	type = ${request.arguments.type}
}
